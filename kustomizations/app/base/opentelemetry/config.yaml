receivers:
  jaeger:
    protocols:
      grpc:
      thrift_binary:
      thrift_compact:
      thrift_http:

  opencensus:

  zipkin:

  # prometheus:
  #   config:
  #     scrape_configs:
  #     - job_name: "linkerd-proxy"
  #       scrape_interval: 5s
  #       static_configs:
  #       - targets: [ "localhost:4191" ]



processors:
  batch:
    timeout: 5s
    send_batch_size: 128

  resource:
    attributes:
    - key: service.name
      action: upsert
      value: ${SERVICE_NAME}
    - key: service.instance.id
      action: upsert
      value: ${K8S_POD_NAME}
    - key: k8s.pod.name
      action: upsert
      value: ${K8S_POD_NAME}
    - key: k8s.pod.uid
      action: upsert
      value: ${K8S_POD_UID}
    - key: k8s.namespace.name
      action: upsert
      value: ${K8S_NAMESPACE_NAME}
    - key: k8s.pod.ip
      action: upsert
      value: ${K8S_POD_IP}
    - key: k8s.cluster.name
      action: upsert
      value: ${K8S_CLUSTER_NAME}
    - key: host.name
      action: upsert
      value: ${HOST_NAME}
    - key: host.ip
      action: upsert
      value: ${HOST_IP}
    - key: cloud.provider
      action: upsert
      value: gcp
    - key: cloud.region
      action: upsert
      value: REGION_NAME_TO_REPLACE
    - key: cloud.zone
      action: upsert
      value: ZONE_NAME_TO_REPLACE
    - key: experimentation
      action: delete
    - key: app
      action: delete
    - key: pod-template-hash
      action: delete
    - key: opencensus.starttime
      action: delete
    - key: opencensus.pid
      action: delete



exporters:
  jaeger:
    endpoint: jaeger-collector.monitoring.svc.cluster.local:14250

  # prometheus:



service:
  pipelines:
    traces:
      receivers: [jaeger, zipkin, opencensus]
      processors: [batch, resource]
      exporters: [jaeger]
    # metrics:
    #   receivers: [prometheus, opencensus]
    #   exporters: [prometheus]
